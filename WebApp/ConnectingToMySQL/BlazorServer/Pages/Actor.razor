@page "/actor"

@using DataLibrary
@using BlazorServer.Models
@using Microsoft.Extensions.Configuration
@inject IDataAccess _data
@inject IConfiguration _config

<h3>Actors</h3>
<button class="btn btn-primary" @onclick="InsertData">Insert</button>
<button class="btn btn-warning" @onclick="UpdateData">Update</button>
<button class="btn btn-danger" @onclick="DeleteData">Delete</button>

@if (actors == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var a in actors)
    {

        <p>
            @a.First_Name @a.Last_Name
        </p>

    }
}

@code {

    List<ActorModel> actors;

    private async Task InsertData()
    {
        string sql = "insert into actor (first_name, last_name) values (@first_name,@last_name)";
        await _data.SaveData(sql, new { first_name = "Kenneth", last_name = "Steve" }, _config.GetConnectionString("default"));
        await OnInitializedAsync();
    }

    private async Task UpdateData()
    {
        string sql = "update actor set first_name = @first_name where last_name = @last_name";
        await _data.SaveData(sql, new { first_name = "Kenneth", last_name = "Steve" }, _config.GetConnectionString("default"));
        await OnInitializedAsync();
    }

    private async Task DeleteData()
    {
        string sql = "delete from actor where first_name = @first_name";
        await _data.SaveData(sql, new { first_name = "Kenneth" }, _config.GetConnectionString("default"));
        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        string sql = "select * from actor";
        actors = await _data.LoadData<ActorModel, dynamic>(sql, new { }, _config.GetConnectionString("default"));
    }
}
